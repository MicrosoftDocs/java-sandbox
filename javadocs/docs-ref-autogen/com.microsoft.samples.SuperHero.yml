### YamlMime:JavaType
constructors:
- fullName: com.microsoft.samples.SuperHero.SuperHero()
  name: SuperHero()
  nameWithType: SuperHero.SuperHero()
  syntax: public SuperHero()
  uid: com.microsoft.samples.SuperHero.SuperHero()
- fullName: com.microsoft.samples.SuperHero.SuperHero(String heroName, String uniquePower, int health, int defense)
  name: SuperHero(String heroName, String uniquePower, int health, int defense)
  nameWithType: SuperHero.SuperHero(String heroName, String uniquePower, int health, int defense)
  parameters:
  - name: heroName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: uniquePower
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: health
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: defense
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public SuperHero(String heroName, String uniquePower, int health, int defense)
  uid: com.microsoft.samples.SuperHero.SuperHero(String,String,int,int)
fields:
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.samples.SuperHero.SOME_PUBLIC_STRING
  name: SOME_PUBLIC_STRING
  nameWithType: SuperHero.SOME_PUBLIC_STRING
  syntax: public final String SOME_PUBLIC_STRING= "So important string value"
  uid: com.microsoft.samples.SuperHero.SOME_PUBLIC_STRING
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.samples.subpackage.Person?alt=com.microsoft.samples.subpackage.Person&text=Person%3CT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.samples.subpackage.Person.age
- com.microsoft.samples.subpackage.Person.buildPerson(Person)
- com.microsoft.samples.subpackage.Person.getFirstName()
- com.microsoft.samples.subpackage.Person.getSomeSet()
- com.microsoft.samples.subpackage.Person.setFirstName(String)
- com.microsoft.samples.subpackage.Person.setLastName(String)
- com.microsoft.samples.subpackage.Person.setLastName()
methods:
- fullName: com.microsoft.samples.SuperHero.getDefense()
  name: getDefense()
  nameWithType: SuperHero.getDefense()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int getDefense()
  uid: com.microsoft.samples.SuperHero.getDefense()
- fullName: com.microsoft.samples.SuperHero.getHealth()
  name: getHealth()
  nameWithType: SuperHero.getHealth()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: protected int getHealth()
  uid: com.microsoft.samples.SuperHero.getHealth()
- fullName: com.microsoft.samples.SuperHero.getHeroName()
  name: getHeroName()
  nameWithType: SuperHero.getHeroName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getHeroName()
  uid: com.microsoft.samples.SuperHero.getHeroName()
- fullName: com.microsoft.samples.SuperHero.getLastName()
  name: getLastName()
  nameWithType: SuperHero.getLastName()
  returns:
    description: <p>lastName in uppercase. But it's not the end, because of multiline comment </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get capitalized last name. But it's not the end, because of multiline comment</p>

    <p></p>
  syntax: public String getLastName()
  uid: com.microsoft.samples.SuperHero.getLastName()
- fullName: com.microsoft.samples.SuperHero.getUniquePower()
  name: getUniquePower()
  nameWithType: SuperHero.getUniquePower()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getUniquePower()
  uid: com.microsoft.samples.SuperHero.getUniquePower()
- fullName: com.microsoft.samples.SuperHero.ReturnNull(Class<V> aClass)
  name: ReturnNull(Class<V> aClass)
  nameWithType: SuperHero.ReturnNull(Class<V> aClass)
  parameters:
  - description: <p>a class </p>
    name: aClass
    type: <xref href="Class%3CV%3E?alt=Class%3CV%3E&text=Class%3CV%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>null </p>
    type: <xref href="%3CV+extends+Class%3E+V?alt=%3CV+extends+Class%3E+V&text=%3CV+extends+Class%3E+V" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a FileStoreAttributeView of the given type. </p>

    <p>This method always returns null as no <xref uid="" data-throw-if-not-resolved="false" data-raw-source="FileStoreAttributeView"></xref> is currently supported.</p>

    <p></p>
  syntax: public <V extends Class> V ReturnNull(Class<V> aClass)
  uid: com.microsoft.samples.SuperHero.ReturnNull(Class<V>)
- fullName: com.microsoft.samples.SuperHero.setDefense(int defense)
  name: setDefense(int defense)
  nameWithType: SuperHero.setDefense(int defense)
  parameters:
  - name: defense
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public void setDefense(int defense)
  uid: com.microsoft.samples.SuperHero.setDefense(int)
- fullName: com.microsoft.samples.SuperHero.setHealth(int health)
  name: setHealth(int health)
  nameWithType: SuperHero.setHealth(int health)
  parameters:
  - name: health
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: protected void setHealth(int health)
  uid: com.microsoft.samples.SuperHero.setHealth(int)
- fullName: com.microsoft.samples.SuperHero.setHeroName(String heroName)
  name: setHeroName(String heroName)
  nameWithType: SuperHero.setHeroName(String heroName)
  parameters:
  - name: heroName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setHeroName(String heroName)
  uid: com.microsoft.samples.SuperHero.setHeroName(String)
- fullName: com.microsoft.samples.SuperHero.setUniquePower(String uniquePower)
  name: setUniquePower(String uniquePower)
  nameWithType: SuperHero.setUniquePower(String uniquePower)
  parameters:
  - name: uniquePower
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setUniquePower(String uniquePower)
  uid: com.microsoft.samples.SuperHero.setUniquePower(String)
- fullName: com.microsoft.samples.SuperHero.successfullyAttacked(int incomingDamage, String damageType)
  name: successfullyAttacked(int incomingDamage, String damageType)
  nameWithType: SuperHero.successfullyAttacked(int incomingDamage, String damageType)
  parameters:
  - description: <p>the amount of incoming damage for <xref uid="com.microsoft.samples.SuperHero" data-throw-if-not-resolved="false" data-raw-source="SuperHero"></xref></p>
    name: incomingDamage
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>type of damage with similar word damageTypeLong, sure </p>
    name: damageType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>when incomingDamage is negative and thanks for <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Exception"></xref></p>
  returns:
    description: <p>the amount of health hero has after attack </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This is a simple description of the method. . . <a href="http://www.supermanisthegreatest.com">Superman!</a></p>

    <p>

      <xrefsect id="deprecated_1_deprecated000008">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>As of version 1.1, use . . . instead </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public int successfullyAttacked(int incomingDamage, String damageType)
  uid: com.microsoft.samples.SuperHero.successfullyAttacked(int,String)
nameWithType: SuperHero
syntax: public class SuperHero extends Person<T>
type: class
uid: com.microsoft.samples.SuperHero
fullName: com.microsoft.samples.SuperHero
name: SuperHero
package: com.microsoft.samples
summary: >-
  <p>Hero is the main entity we will be using to something</p>

  <p></p>
metadata: {}
