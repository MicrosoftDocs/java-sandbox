### YamlMime:JavaType
uid: "com.microsoft.samples.subpackage.Person"
fullName: "com.microsoft.samples.subpackage.Person<T>"
name: "Person<T>"
nameWithType: "Person<T>"
summary: "Class that describes some person This comment has links to:\n\n *  Owner class <xref uid=\"com.microsoft.samples.subpackage.Person\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person\"></xref>\n *  Its inner class <xref uid=\"com.microsoft.samples.subpackage.Person.IdentificationInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person.IdentificationInfo\"></xref>\n *  Its method <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#setLastName(String lastName)\"></xref>\n *  Its method without params <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#setLastName()\"></xref>\n *  Its public field <xref uid=\"com.microsoft.samples.subpackage.Person.age\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#age\"></xref>\n *  Another class which used here <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref>\n *  Another class which not used here <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref>\n *  Broken link <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"sdfdsagdsfghfgh\"></xref>\n *  Plain link <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"someContent\"></xref>\n *  Link that starts from '\\#' <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setLastName()\"></xref>\n *  Link with label <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WordOne\"></xref>\n\nThis is an \"at\" symbol: @"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Person<T>"
constructors:
- uid: "com.microsoft.samples.subpackage.Person.Person()"
  fullName: "com.microsoft.samples.subpackage.Person<T>.Person()"
  name: "Person()"
  nameWithType: "Person<T>.Person()"
  syntax: "public Person()"
fields:
- uid: "com.microsoft.samples.subpackage.Person.age"
  fullName: "com.microsoft.samples.subpackage.Person<T>.age"
  name: "age"
  nameWithType: "Person<T>.age"
  field:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public int age"
methods:
- uid: "com.microsoft.samples.subpackage.Person.buildPerson(com.microsoft.samples.subpackage.Person)"
  fullName: "com.microsoft.samples.subpackage.Person<T>.buildPerson(Person seed)"
  name: "buildPerson(Person seed)"
  nameWithType: "Person<T>.buildPerson(Person seed)"
  summary: "We need to have this method that takes parameter and return types declared in the current class Test link <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> A person maybe a <xref uid=\"com.microsoft.samples.SuperHero\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SuperHero\"></xref>"
  modifiers:
  - "static"
  parameters:
  - name: "seed"
    type: "<xref href=\"com.microsoft.samples.subpackage.Person?alt=com.microsoft.samples.subpackage.Person&text=Person\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Person buildPerson(Person seed)"
  returns:
    type: "<xref href=\"com.microsoft.samples.subpackage.Person?alt=com.microsoft.samples.subpackage.Person&text=Person\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.samples.subpackage.Person.getFirstName()"
  fullName: "com.microsoft.samples.subpackage.Person<T>.getFirstName()"
  name: "getFirstName()"
  nameWithType: "Person<T>.getFirstName()"
  syntax: "public String getFirstName()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.samples.subpackage.Person.getLastName()"
  fullName: "com.microsoft.samples.subpackage.Person<T>.getLastName()"
  name: "getLastName()"
  nameWithType: "Person<T>.getLastName()"
  syntax: "public String getLastName()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.samples.subpackage.Person.getSomeSet()"
  fullName: "com.microsoft.samples.subpackage.Person<T>.getSomeSet()"
  name: "getSomeSet()"
  nameWithType: "Person<T>.getSomeSet()"
  syntax: "public Set<String> getSomeSet()"
  returns:
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.samples.subpackage.Person.setFirstName(java.lang.String)"
  fullName: "com.microsoft.samples.subpackage.Person<T>.setFirstName(String firstName)"
  name: "setFirstName(String firstName)"
  nameWithType: "Person<T>.setFirstName(String firstName)"
  parameters:
  - name: "firstName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setFirstName(String firstName)"
- uid: "com.microsoft.samples.subpackage.Person.setLastName()"
  fullName: "com.microsoft.samples.subpackage.Person<T>.setLastName()"
  name: "setLastName()"
  nameWithType: "Person<T>.setLastName()"
  syntax: "public void setLastName()"
- uid: "com.microsoft.samples.subpackage.Person.setLastName(java.lang.String)"
  fullName: "com.microsoft.samples.subpackage.Person<T>.setLastName(String lastName)"
  name: "setLastName(String lastName)"
  nameWithType: "Person<T>.setLastName(String lastName)"
  parameters:
  - name: "lastName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setLastName(String lastName)"
type: "class"
typeParameters:
- description: "The type of person."
  name: "T"
desc: "Class that describes some person This comment has links to:\n\n *  Owner class <xref uid=\"com.microsoft.samples.subpackage.Person\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person\"></xref>\n *  Its inner class <xref uid=\"com.microsoft.samples.subpackage.Person.IdentificationInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person.IdentificationInfo\"></xref>\n *  Its method <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#setLastName(String lastName)\"></xref>\n *  Its method without params <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#setLastName()\"></xref>\n *  Its public field <xref uid=\"com.microsoft.samples.subpackage.Person.age\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Person#age\"></xref>\n *  Another class which used here <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Set\"></xref>\n *  Another class which not used here <xref uid=\"java.util.List\" data-throw-if-not-resolved=\"false\" data-raw-source=\"List\"></xref>\n *  Broken link <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"sdfdsagdsfghfgh\"></xref>\n *  Plain link <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"someContent\"></xref>\n *  Link that starts from '\\#' <xref uid=\"com.microsoft.samples.subpackage.Person.setLastName()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setLastName()\"></xref>\n *  Link with label <xref uid=\"java.util.Set\" data-throw-if-not-resolved=\"false\" data-raw-source=\"WordOne\"></xref>\n\nThis is an \"at\" symbol: @"
metadata: {}
package: "com.microsoft.samples.subpackage"
