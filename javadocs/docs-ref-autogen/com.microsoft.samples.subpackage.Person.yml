### YamlMime:JavaType
fields:
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.samples.subpackage.Person<T>.age
  name: age
  nameWithType: Person<T>.age
  syntax: public int age
  uid: com.microsoft.samples.subpackage.Person.age
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.samples.subpackage.Person<T>.buildPerson(Person seed)
  name: buildPerson(Person seed)
  nameWithType: Person<T>.buildPerson(Person seed)
  parameters:
  - name: seed
    type: <xref href="com.microsoft.samples.subpackage.Person?alt=com.microsoft.samples.subpackage.Person&text=Person%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.samples.subpackage.Person?alt=com.microsoft.samples.subpackage.Person&text=Person%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: <p>We need to have this method that takes parameter and return types declared in the current class Test link <xref uid="" data-throw-if-not-resolved="false" data-raw-source="String"></xref> A person maybe a <xref uid="com.microsoft.samples.SuperHero" data-throw-if-not-resolved="false" data-raw-source="SuperHero"></xref></p>
  syntax: public static Person buildPerson(Person seed)
  uid: com.microsoft.samples.subpackage.Person.buildPerson(Person)
- fullName: com.microsoft.samples.subpackage.Person<T>.getFirstName()
  name: getFirstName()
  nameWithType: Person<T>.getFirstName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getFirstName()
  uid: com.microsoft.samples.subpackage.Person.getFirstName()
- fullName: com.microsoft.samples.subpackage.Person<T>.getLastName()
  name: getLastName()
  nameWithType: Person<T>.getLastName()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getLastName()
  uid: com.microsoft.samples.subpackage.Person.getLastName()
- fullName: com.microsoft.samples.subpackage.Person<T>.getSomeSet()
  name: getSomeSet()
  nameWithType: Person<T>.getSomeSet()
  returns:
    type: <xref href="Set%3CString%3E?alt=Set%3CString%3E&text=Set%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public Set<String> getSomeSet()
  uid: com.microsoft.samples.subpackage.Person.getSomeSet()
- fullName: com.microsoft.samples.subpackage.Person<T>.setFirstName(String firstName)
  name: setFirstName(String firstName)
  nameWithType: Person<T>.setFirstName(String firstName)
  parameters:
  - name: firstName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setFirstName(String firstName)
  uid: com.microsoft.samples.subpackage.Person.setFirstName(String)
- fullName: com.microsoft.samples.subpackage.Person<T>.setLastName()
  name: setLastName()
  nameWithType: Person<T>.setLastName()
  syntax: public void setLastName()
  uid: com.microsoft.samples.subpackage.Person.setLastName()
- fullName: com.microsoft.samples.subpackage.Person<T>.setLastName(String lastName)
  name: setLastName(String lastName)
  nameWithType: Person<T>.setLastName(String lastName)
  parameters:
  - name: lastName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public void setLastName(String lastName)
  uid: com.microsoft.samples.subpackage.Person.setLastName(String)
nameWithType: Person<T>
syntax: public class Person<T>
type: class
typeParameters:
- name: T
uid: com.microsoft.samples.subpackage.Person
fullName: com.microsoft.samples.subpackage.Person<T>
name: Person<T>
package: com.microsoft.samples.subpackage
metadata: {}
