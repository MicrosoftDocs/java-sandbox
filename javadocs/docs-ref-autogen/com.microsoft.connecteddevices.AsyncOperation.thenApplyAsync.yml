### YamlMime:JavaMember
nameWithType: AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
type: method
members:
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
  name: thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
  nameWithType: AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
  parameters:
  - description: <p>ResultFunction that will be executed upon completion of this operation </p>
    name: action
    type: '@NonNull <xref href="com.microsoft.connecteddevices.AsyncOperation.ResultFunction?alt=com.microsoft.connecteddevices.AsyncOperation.ResultFunction&text=AsyncOperation.ResultFunction" data-throw-if-not-resolved="False"/>&lt;? super T, ? extends U&gt;'
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The thenApply trio of functions (thenApplyAsync(action), thenApplyAsync(action), and thenApplyAsync(action,Executor)) run a passed in ResultFunction when this operation completes successfully. </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
  uid: com.microsoft.connecteddevices.AsyncOperation.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U>)
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action, @NonNull Executor executor)
  name: thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action, @NonNull Executor executor)
  nameWithType: AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action, @NonNull Executor executor)
  parameters:
  - description: <p>ResultFunction that will be executed upon completion of this operation </p>
    name: action
    type: '@NonNull <xref href="com.microsoft.connecteddevices.AsyncOperation.ResultFunction?alt=com.microsoft.connecteddevices.AsyncOperation.ResultFunction&text=AsyncOperation.ResultFunction" data-throw-if-not-resolved="False"/>&lt;? super T, ? extends U&gt;'
  - description: <p>Executor with which to execute the function </p>
    name: executor
    type: <xref href="%40NonNull+Executor?alt=@NonNull Executor&text=%40NonNull+Executor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The thenApply trio of functions (thenApplyAsync(action), thenApplyAsync(action), and thenApplyAsync(action,Executor)) run a passed in ResultFunction when this operation completes successfully. </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action, @NonNull Executor executor)
  uid: com.microsoft.connecteddevices.AsyncOperation.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U>,@NonNull Executor)
uid: com.microsoft.connecteddevices.AsyncOperation.thenApplyAsync*
fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
name: thenApplyAsync(@NonNull ResultFunction<? super T, ? extends U> action)
package: com.microsoft.connecteddevices
metadata: {}
