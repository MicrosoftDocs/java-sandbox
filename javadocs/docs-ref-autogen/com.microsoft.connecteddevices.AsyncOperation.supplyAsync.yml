### YamlMime:JavaMember
nameWithType: AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
type: method
members:
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
  name: supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
  nameWithType: AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
  parameters:
  - description: <p>supplier from which to get a value to complete this operation </p>
    name: supplier
    type: <xref href="%40NonNull+AsyncOperation.Supplier%3CU%3E?alt=@NonNull AsyncOperation.Supplier<U>&text=%40NonNull+AsyncOperation.Supplier%3CU%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete with a value from the supplier </p>
    type: static&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;
  summary: >-
    <p>Creates an operation that will use the default executor to get a value from the supplier </p>

    <p></p>
  syntax: public static static<U> AsyncOperation<U> supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
  uid: com.microsoft.connecteddevices.AsyncOperation.supplyAsync(@NonNull AsyncOperation.Supplier<U>)
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier, @NonNull Executor executor)
  name: supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier, @NonNull Executor executor)
  nameWithType: AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier, @NonNull Executor executor)
  parameters:
  - description: <p>supplier from which to get a value to complete this operation </p>
    name: supplier
    type: <xref href="%40NonNull+AsyncOperation.Supplier%3CU%3E?alt=@NonNull AsyncOperation.Supplier<U>&text=%40NonNull+AsyncOperation.Supplier%3CU%3E" data-throw-if-not-resolved="False"/>
  - description: <p>executor on which to run the action </p>
    name: executor
    type: <xref href="%40NonNull+Executor?alt=@NonNull Executor&text=%40NonNull+Executor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete with a value from the supplier </p>
    type: static&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;
  summary: >-
    <p>Creates an operation that will use the passed in executor to get a value from the supplier </p>

    <p></p>
  syntax: public static static<U> AsyncOperation<U> supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier, @NonNull Executor executor)
  uid: com.microsoft.connecteddevices.AsyncOperation.supplyAsync(@NonNull AsyncOperation.Supplier<U>,@NonNull Executor)
uid: com.microsoft.connecteddevices.AsyncOperation.supplyAsync*
fullName: com.microsoft.connecteddevices.AsyncOperation<T>.supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
name: supplyAsync(@NonNull AsyncOperation.Supplier<U> supplier)
package: com.microsoft.connecteddevices
metadata: {}
