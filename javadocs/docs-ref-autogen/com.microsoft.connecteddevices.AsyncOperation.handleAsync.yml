### YamlMime:JavaMember
nameWithType: AsyncOperation<T>.handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
type: method
members:
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
  name: handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
  nameWithType: AsyncOperation<T>.handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
  parameters:
  - description: <p>Function that will be executed upon completion of this operation </p>
    name: action
    type: <xref href="%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+Throwable%2C+%3F+extends+U%3E?alt=@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U>&text=%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+Throwable%2C+%3F+extends+U%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Executor with which to execute the function </p>
    name: executor
    type: <xref href="%40NonNull+Executor?alt=@NonNull Executor&text=%40NonNull+Executor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The handle trio of functions (handle(action), handleAsync(action), and handleAsync(action,Executor)) are the most basic continuation functions upon which the others are built. Upon successful or exceptional completion of this operation, the passed in action will be executed allowing both antecedent results and antecedent exceptions to be observed. </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
  uid: com.microsoft.connecteddevices.AsyncOperation.handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U>,@NonNull Executor)
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action)
  name: handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action)
  nameWithType: AsyncOperation<T>.handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action)
  parameters:
  - description: <p>Function that will be executed upon completion of this operation </p>
    name: action
    type: <xref href="%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+Throwable%2C+%3F+extends+U%3E?alt=@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U>&text=%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+Throwable%2C+%3F+extends+U%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The handle trio of functions (handle(action), handleAsync(action), and handleAsync(action,Executor)) are the most basic continuation functions upon which the others are built. Upon successful or exceptional completion of this operation, the passed in action will be executed allowing both antecedent results and antecedent exceptions to be observed. </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action)
  uid: com.microsoft.connecteddevices.AsyncOperation.handleAsync(@NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U>)
uid: com.microsoft.connecteddevices.AsyncOperation.handleAsync*
fullName: com.microsoft.connecteddevices.AsyncOperation<T>.handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
name: handleAsync( @NonNull AsyncOperation.ResultBiFunction<? super T, ? super Throwable, ? extends U> action, @NonNull Executor executor)
package: com.microsoft.connecteddevices
metadata: {}
