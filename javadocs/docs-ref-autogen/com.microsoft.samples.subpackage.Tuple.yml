### YamlMime:JavaType
uid: "com.microsoft.samples.subpackage.Tuple"
fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>"
name: "Tuple<T1,T2>"
nameWithType: "Tuple<T1,T2>"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **Tuple<T1,T2>**"
constructors:
- uid: "com.microsoft.samples.subpackage.Tuple.Tuple(T1,T2)"
  fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>.Tuple(T1 item1, T2 item2)"
  name: "Tuple(T1 item1, T2 item2)"
  nameWithType: "Tuple<T1,T2>.Tuple(T1 item1, T2 item2)"
  parameters:
  - name: "item1"
    type: "<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />"
  - name: "item2"
    type: "<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Tuple(T1 item1, T2 item2)"
methods:
- uid: "com.microsoft.samples.subpackage.Tuple.getItem1()"
  fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>.getItem1()"
  name: "getItem1()"
  nameWithType: "Tuple<T1,T2>.getItem1()"
  syntax: "public T1 getItem1()"
  returns:
    type: "<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.samples.subpackage.Tuple.getItem2()"
  fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>.getItem2()"
  name: "getItem2()"
  nameWithType: "Tuple<T1,T2>.getItem2()"
  syntax: "public T2 getItem2()"
  returns:
    type: "<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.samples.subpackage.Tuple.setItem1(T1)"
  fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>.setItem1(T1 item1)"
  name: "setItem1(T1 item1)"
  nameWithType: "Tuple<T1,T2>.setItem1(T1 item1)"
  parameters:
  - name: "item1"
    type: "<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setItem1(T1 item1)"
- uid: "com.microsoft.samples.subpackage.Tuple.setItem2(T2)"
  fullName: "com.microsoft.samples.subpackage.Tuple<T1,T2>.setItem2(T2 item2)"
  name: "setItem2(T2 item2)"
  nameWithType: "Tuple<T1,T2>.setItem2(T2 item2)"
  parameters:
  - name: "item2"
    type: "<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setItem2(T2 item2)"
type: "class"
typeParameters:
- name: "T1"
- name: "T2"
metadata: {}
package: "com.microsoft.samples.subpackage"
