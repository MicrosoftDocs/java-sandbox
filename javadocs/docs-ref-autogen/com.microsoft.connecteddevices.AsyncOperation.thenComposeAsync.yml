### YamlMime:JavaMember
nameWithType: AsyncOperation<T>.thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
type: method
members:
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
  name: thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
  nameWithType: AsyncOperation<T>.thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
  parameters:
  - description: <p>Function that will be executed upon completion of both operations </p>
    name: action
    type: '@NonNull AsyncOperation.ResultFunction&lt;? super T, ? extends <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;&gt;'
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The thenCompose trio of functions run a passed in ResultFunction when this operation completes successfully. The ResultFunction returns an AsyncOperation&lt;T&gt; and the return operation from this call returns a AsyncOperation&lt;T&gt; as opposed to a AsyncOperation&lt;AsyncOperation&lt;T&gt;&gt; </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
  uid: com.microsoft.connecteddevices.AsyncOperation.thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>>)
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenComposeAsync(AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action, Executor executor)
  name: thenComposeAsync(AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action, Executor executor)
  nameWithType: AsyncOperation<T>.thenComposeAsync(AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action, Executor executor)
  parameters:
  - description: <p>Function that will be executed upon completion of both operations </p>
    name: action
    type: AsyncOperation.ResultFunction&lt;? super T, ? extends <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;&gt;
  - description: <p>Executor with which to execute the function </p>
    name: executor
    type: <xref href="Executor?alt=Executor&text=Executor" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;U&gt;'
  summary: >-
    <p>The thenCompose trio of functions run a passed in ResultFunction when this operation completes successfully. The ResultFunction returns an AsyncOperation&lt;T&gt; and the return operation from this call returns a AsyncOperation&lt;T&gt; as opposed to a AsyncOperation&lt;AsyncOperation&lt;T&gt;&gt; </p>

    <p></p>
  syntax: public <U> AsyncOperation<U> thenComposeAsync(AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action, Executor executor)
  uid: com.microsoft.connecteddevices.AsyncOperation.thenComposeAsync(AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>>,Executor)
uid: com.microsoft.connecteddevices.AsyncOperation.thenComposeAsync*
fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
name: thenComposeAsync(@NonNull AsyncOperation.ResultFunction<? super T, ? extends AsyncOperation<U>> action)
package: com.microsoft.connecteddevices
metadata: {}
