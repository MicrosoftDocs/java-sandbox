### YamlMime:JavaMember
nameWithType: AsyncOperation<T>.thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
type: method
members:
- fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
  name: thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
  nameWithType: AsyncOperation<T>.thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
  parameters:
  - description: <p>the other operation to "AND" together </p>
    name: other
    type: '@NonNull <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;? extends U&gt;'
  - description: <p>ResultFunction that will be executed upon completion of both operations </p>
    name: action
    type: <xref href="%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+U%2C+%3F+extends+V%3E?alt=@NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V>&text=%40NonNull+AsyncOperation.ResultBiFunction%3C%3F+super+T%2C+%3F+super+U%2C+%3F+extends+V%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A new async operation that will complete based on the outcome of passed in action </p>
    type: '&lt;U, V&gt; <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;V&gt;'
  summary: >-
    <p>The thenCombine trio of functions run a passed in ResultFunction when this operation and the passed in operation completes successfully. If either operation completes exceptionally, the returned operation also completes exceptionally. </p>

    <p></p>
  syntax: public <U, V> AsyncOperation<V> thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
  uid: com.microsoft.connecteddevices.AsyncOperation.thenCombine(@NonNull AsyncOperation<? extends U>,@NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V>)
uid: com.microsoft.connecteddevices.AsyncOperation.thenCombine*
fullName: com.microsoft.connecteddevices.AsyncOperation<T>.thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
name: thenCombine( @NonNull AsyncOperation<? extends U> other, @NonNull AsyncOperation.ResultBiFunction<? super T, ? super U, ? extends V> action)
package: com.microsoft.connecteddevices
metadata: {}
