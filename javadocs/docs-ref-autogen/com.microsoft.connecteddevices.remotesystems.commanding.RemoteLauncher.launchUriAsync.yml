### YamlMime:JavaMember
nameWithType: RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
type: method
members:
- fullName: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
  name: launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
  nameWithType: RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
  parameters:
  - description: <p>The <xref uid="com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest" data-throw-if-not-resolved="false">RemoteSystemConnectionRequest</xref>, specifying which remote system or application to connect to. </p>
    name: connectionRequest
    type: '@NonNull <xref href="com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest?alt=com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest&text=RemoteSystemConnectionRequest" data-throw-if-not-resolved="False"/>'
  - description: <p>The URI which will be delivered. </p>
    name: uri
    type: <xref href="%40NonNull+String?alt=@NonNull String&text=%40NonNull+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.connecteddevices.remotesystems.commanding.RemoteLaunchUriStatus?alt=com.microsoft.connecteddevices.remotesystems.commanding.RemoteLaunchUriStatus&text=RemoteLaunchUriStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Delivers the URI to be handled by the specified remote system or application. It can be used to launch an app if the receiving system is configured to do so. </p>
  syntax: public AsyncOperation<RemoteLaunchUriStatus> launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
  uid: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync(@NonNull RemoteSystemConnectionRequest,@NonNull String)
- fullName: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri, @Nullable RemoteLauncherOptions options)
  name: launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri, @Nullable RemoteLauncherOptions options)
  nameWithType: RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri, @Nullable RemoteLauncherOptions options)
  parameters:
  - description: <p>The <xref uid="com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest" data-throw-if-not-resolved="false">RemoteSystemConnectionRequest</xref>, specifying which remote system or application to connect to. </p>
    name: connectionRequest
    type: '@NonNull <xref href="com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest?alt=com.microsoft.connecteddevices.remotesystems.commanding.RemoteSystemConnectionRequest&text=RemoteSystemConnectionRequest" data-throw-if-not-resolved="False"/>'
  - description: <p>The URI which will be delivered. </p>
    name: uri
    type: <xref href="%40NonNull+String?alt=@NonNull String&text=%40NonNull+String" data-throw-if-not-resolved="False"/>
  - description: <p>The launch specifications for the app. </p>
    name: options
    type: '@Nullable <xref href="com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncherOptions?alt=com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncherOptions&text=RemoteLauncherOptions" data-throw-if-not-resolved="False"/>'
  returns:
    type: <xref href="com.microsoft.connecteddevices.AsyncOperation?alt=com.microsoft.connecteddevices.AsyncOperation&text=AsyncOperation" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.connecteddevices.remotesystems.commanding.RemoteLaunchUriStatus?alt=com.microsoft.connecteddevices.remotesystems.commanding.RemoteLaunchUriStatus&text=RemoteLaunchUriStatus" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Delivers the URI to be handled by the specified remote system or application. It can be used to launch an app with the given launch options if the receiving system is configured to do so. </p>
  syntax: public AsyncOperation<RemoteLaunchUriStatus> launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri, @Nullable RemoteLauncherOptions options)
  uid: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync(@NonNull RemoteSystemConnectionRequest,@NonNull String,@Nullable RemoteLauncherOptions)
uid: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync*
fullName: com.microsoft.connecteddevices.remotesystems.commanding.RemoteLauncher.launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
name: launchUriAsync( @NonNull RemoteSystemConnectionRequest connectionRequest, @NonNull String uri)
package: com.microsoft.connecteddevices.remotesystems.commanding
metadata: {}
